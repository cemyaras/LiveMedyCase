// <auto-generated />
using LiveMedyCase.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiveMedyCase.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230619032510_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("LiveMedyCase.Data.Model.Entities.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReffererUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReffererUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("LiveMedyCase.Data.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReferralCode")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "$2a$11$ymEeTFMkJ8A3Jc3VHpEK2eGlcSDvL/rZVPCAZnxy3EErCdxftJGnu",
                            ReferralCode = "InwhWwE2",
                            Role = 10,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("LiveMedyCase.Data.Model.Entities.Referral", b =>
                {
                    b.HasOne("LiveMedyCase.Data.Model.Entities.User", "ReffererUser")
                        .WithMany("Referral")
                        .HasForeignKey("ReffererUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiveMedyCase.Data.Model.Entities.User", "User")
                        .WithMany("Referrer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReffererUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LiveMedyCase.Data.Model.Entities.User", b =>
                {
                    b.Navigation("Referral");

                    b.Navigation("Referrer");
                });
#pragma warning restore 612, 618
        }
    }
}
