@model UserLoginViewModel;
@inject IOptions<ReCaptchaConfig> config;
@{
	Layout = "_Layout";
	ViewData["Title"] = "SignIn";
	var message = TempData["Message"]?.ToString();
}

@if (!string.IsNullOrWhiteSpace(message))
{
	<div class="alert-message">
		@message
	</div>
}
<form id="signin-form" asp-controller="Auth" asp-action="SignIn" method="Post">
	<div class="mb-4">
		<label class="form-label">Username</label>
		<input asp-for="@Model.Username" value="@Model.Username" class="form-control form-control-lg" type="text" placeholder="Username" />
		<span asp-validation-for="Username" class="text-danger"></span>
	</div>
	<div class="mb-4">
		<label class="form-label">Password</label>
		<input asp-for="@Model.Password" class="form-control form-control-lg" type="password" placeholder="Password" />
		<span asp-validation-for="Password" class="text-danger"></span>
	</div>
	<input asp-for="@Model.Token" type="hidden" id="token" />
	<div class="text-center mt-4">
		<button type="submit" class="btn btn-lg btn-primary">Sign in</button>
	</div>
	<a asp-controller="Auth" asp-action="SignUp">SignUp</a>
</form>

@section Scripts {
	<script src="https://www.google.com/recaptcha/api.js?render=@config.Value.RecaptchaV3SiteKey"></script>
	<script>
		grecaptcha.ready(function () {
			grecaptcha.execute("@config.Value.RecaptchaV3SiteKey", { action: "submit" })
				.then(function (token) {
					document.getElementById("token").value = token;
				});
		});
	</script>
}